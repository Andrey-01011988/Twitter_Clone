services:
  test_db:
    image: postgres:latest
    container_name: test_postgres_container
    environment:
      - POSTGRES_DB=test_twitter
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d test_twitter -U test" ]  # Добавляем healthcheck для тестовой БД
      interval: 30s  # Интервал между проверками состояния контейнера
      timeout: 60s   # Таймаут для каждой проверки состояния
      retries: 5     # Количество попыток перед тем, как контейнер будет помечен как unhealthy
      start_period: 80s  # Время ожидания перед первой проверкой состояния после запуска контейнера
    ports:
      - "5432:5432"
    networks:
      - my_network_test
    volumes:
      - ./init_test_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./test_db/:/var/lib/postgresql/data
  test_server:
    build:
      context: .
      dockerfile: server/Dockerfile.Test
    ports:
      - "5000:5000"
    depends_on:
      test_db:
        condition: service_healthy
    networks:
      - my_network_test
#    restart: unless-stopped # Контейнер будет перезапущен только в случае сбоя
#    command: /bin/sh -c "pytest -v"  # Запуск pytest с помощью оболочки

networks:
  my_network_test:
    driver: bridge